"""add_lis_system_tables

Revision ID: a6f35b936876
Revises: f23e1d5f4512
Create Date: 2025-08-13 12:00:47.403834

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a6f35b936876'
down_revision: Union[str, Sequence[str], None] = 'f23e1d5f4512'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_profiles', sa.Column('demographics', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('home_location', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('trips_taken', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('living_situation', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('profession', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('education', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('key_relationships', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('children', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('relationship_goals', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('cultural_language_preferences', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('aesthetic_preferences', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('dining_preferences_cuisine', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('dining_preferences_other', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('indoor_activity_preferences', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('outdoor_activity_preferences', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('at_home_activity_preferences', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('favorite_neighborhoods', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('tv_movie_genres', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('music_genres', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('podcast_genres', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('favorite_creators', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('accommodation_preferences', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('travel_style', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('vehicle_ownership', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('fitness_level', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('medical_conditions', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('health_goals', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('career_goals', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('financial_goals', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('social_goals', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('learning_goals', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('travel_goals', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('recent_searches', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('recent_content_likes', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('recent_plan_discussions', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('recently_visited_venues', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('recent_media_consumption', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('user_mood', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('user_energy', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('user_stress', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('typical_outing_times', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('wake_sleep_time', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('meal_times', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('exercise_time', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('weekly_routines', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('productivity_windows', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('commute_patterns', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('preferred_budget', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('preferred_vibe', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('content_discovery_sources', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('typical_group_size', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('current_location', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('time_of_day', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('day_of_week', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('weather', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('device_type_usage_mode', sa.String(), nullable=True))
    op.alter_column('user_profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('user_profiles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_constraint('user_profiles_user_id_key', 'user_profiles', type_='unique')
    op.drop_column('user_profiles', 'location_name')
    op.drop_column('user_profiles', 'interests')
    op.drop_column('user_profiles', 'age_group')
    op.drop_column('user_profiles', 'longitude')
    op.drop_column('user_profiles', 'travel_history')
    op.drop_column('user_profiles', 'latitude')
    op.drop_column('user_profiles', 'relationship_status')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_profiles', sa.Column('relationship_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('travel_history', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('age_group', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('interests', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('location_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_unique_constraint('user_profiles_user_id_key', 'user_profiles', ['user_id'])
    op.alter_column('user_profiles', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('user_profiles', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('user_profiles', 'device_type_usage_mode')
    op.drop_column('user_profiles', 'weather')
    op.drop_column('user_profiles', 'day_of_week')
    op.drop_column('user_profiles', 'time_of_day')
    op.drop_column('user_profiles', 'current_location')
    op.drop_column('user_profiles', 'typical_group_size')
    op.drop_column('user_profiles', 'content_discovery_sources')
    op.drop_column('user_profiles', 'preferred_vibe')
    op.drop_column('user_profiles', 'preferred_budget')
    op.drop_column('user_profiles', 'commute_patterns')
    op.drop_column('user_profiles', 'productivity_windows')
    op.drop_column('user_profiles', 'weekly_routines')
    op.drop_column('user_profiles', 'exercise_time')
    op.drop_column('user_profiles', 'meal_times')
    op.drop_column('user_profiles', 'wake_sleep_time')
    op.drop_column('user_profiles', 'typical_outing_times')
    op.drop_column('user_profiles', 'user_stress')
    op.drop_column('user_profiles', 'user_energy')
    op.drop_column('user_profiles', 'user_mood')
    op.drop_column('user_profiles', 'recent_media_consumption')
    op.drop_column('user_profiles', 'recently_visited_venues')
    op.drop_column('user_profiles', 'recent_plan_discussions')
    op.drop_column('user_profiles', 'recent_content_likes')
    op.drop_column('user_profiles', 'recent_searches')
    op.drop_column('user_profiles', 'travel_goals')
    op.drop_column('user_profiles', 'learning_goals')
    op.drop_column('user_profiles', 'social_goals')
    op.drop_column('user_profiles', 'financial_goals')
    op.drop_column('user_profiles', 'career_goals')
    op.drop_column('user_profiles', 'health_goals')
    op.drop_column('user_profiles', 'medical_conditions')
    op.drop_column('user_profiles', 'fitness_level')
    op.drop_column('user_profiles', 'vehicle_ownership')
    op.drop_column('user_profiles', 'travel_style')
    op.drop_column('user_profiles', 'accommodation_preferences')
    op.drop_column('user_profiles', 'favorite_creators')
    op.drop_column('user_profiles', 'podcast_genres')
    op.drop_column('user_profiles', 'music_genres')
    op.drop_column('user_profiles', 'tv_movie_genres')
    op.drop_column('user_profiles', 'favorite_neighborhoods')
    op.drop_column('user_profiles', 'at_home_activity_preferences')
    op.drop_column('user_profiles', 'outdoor_activity_preferences')
    op.drop_column('user_profiles', 'indoor_activity_preferences')
    op.drop_column('user_profiles', 'dining_preferences_other')
    op.drop_column('user_profiles', 'dining_preferences_cuisine')
    op.drop_column('user_profiles', 'aesthetic_preferences')
    op.drop_column('user_profiles', 'cultural_language_preferences')
    op.drop_column('user_profiles', 'relationship_goals')
    op.drop_column('user_profiles', 'children')
    op.drop_column('user_profiles', 'key_relationships')
    op.drop_column('user_profiles', 'education')
    op.drop_column('user_profiles', 'profession')
    op.drop_column('user_profiles', 'living_situation')
    op.drop_column('user_profiles', 'trips_taken')
    op.drop_column('user_profiles', 'home_location')
    op.drop_column('user_profiles', 'demographics')
    # ### end Alembic commands ###
